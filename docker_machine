#!/usr/bin/env python
# -*- coding: utf-8 -*-

DOCUMENTATION = '''
---
module: docker_machine
short_description: Create docker host machine using docker-machine
'''

import docker_machine
from docker_machine.cli.driver_config import (
    create_config_from_dict
)


class DockerMachineModule(object):
    def __init__(self, module):
        self.module = module
        args = module.params
        self.state = args['state']
        self.name = args['name']
        self.driver = args['driver']

        driver_config = args.copy()
        for k in ['state', 'name', 'driver']:
            driver_config.pop(k)
        self.driver_config = create_config_from_dict(self.driver, driver_config)

        self.client = docker_machine.Client()

        if self.client.machine_name_exists(self.name):
            self.status = self.client.machine_status(self.name)
        else:
            self.status = None

    def execute(self):
        if self.state == 'running' and self.status is None:
            self.client.create_machine(self.name, self.driver_config)
            return dict(changed=True)
        elif self.state == 'absent' and self.status is not None:
            self.client.remove_machine(self.name)
            return dict(changed=True)

        return dict(changed=False)

def main():
    global module
    module = AnsibleModule(
        argument_spec={
            'state': {'default': 'running', 'choices': ['running', 'absent']},
            'name': {'required': True, 'type': 'str'},
            'driver': {'default': 'none', 'type': 'str'}
        },
        supports_check_mode=False
    )

    result = DockerMachineModule(module).execute()
    module.exit_json(**result)


from ansible.module_utils.basic import *

if __name__ == '__main__':
    main()
